<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.business.dao.ProductDao">

	<!-- 제픔 목록 조회 -->
	<select id="productList" resultType="kr.happyjob.study.business.model.ProductModel">
		/*kr.happyjob.study.business.dao.ProductDao.productList*/
		 select po.product_no as product_no
		        ,po.lcategory_cd as lcategory_cd
		        ,dc.detail_name as lcategory_name
		        ,po.mcategory_cd as mcategory_cd
		        ,py.product_name as mcategory_name
		        ,po.product_name as product_name
		        ,po.price as price
		        ,po.stock as stock
		    from tb_product po
		         inner join tb_detail_code dc on dc.group_code = 'lcategory_cd' and po.lcategory_cd = dc.detail_code
		         inner join tb_product_type py on po.lcategory_cd = py.lcategory_cd and po.mcategory_cd = py.mcategory_cd
		   <where>
		   		<if test="!lcategory_cd.equals('') and lcategory_cd != null">
			   		and po.lcategory_cd = #{lcategory_cd} 
		   		</if>
		   		<if test="!''.equals(mcategory_cd) and mcategory_cd != null">
			   		and po.mcategory_cd = #{mcategory_cd}
		   		</if>
		   </where> 
		order by po.product_no DESC
		LIMIT #{pageindex}, #{pageSize}
		
	</select>

	<!-- 제품 목록 총갯수 조회 -->
	<select id="productListCnt" resultType="int">
		/*kr.happyjob.study.business.dao.ProductDao.productListCnt*/
		select count(po.product_no) total_cnt
	      from tb_product po
	           inner join tb_detail_code dc on dc.group_code = 'lcategory_cd' and po.lcategory_cd = dc.detail_code
	           inner join tb_product_type py on po.lcategory_cd = py.lcategory_cd and po.mcategory_cd = py.mcategory_cd
	      <where>
		   		<if test="!lcategory_cd.equals('') and lcategory_cd != null">
			   		and po.lcategory_cd = #{lcategory_cd} 
		   		</if>
		   		<if test="!''.equals(mcategory_cd) and mcategory_cd != null">
			   		and po.mcategory_cd = #{mcategory_cd}
		   		</if>
		  </where> 
		
	</select>
	
	<!-- 제품 목록 총갯수 조회 -->
	<update id="insertStock">
		/*kr.happyjob.study.business.dao.ProductDao.insertStock*/
		 update tb_product
		 <if test="stock != null and !stock.equals('')">
		    set stock = stock+#{stock}
		 </if>
		 <if test="price != null and !price.equals('')">
		    set price = #{price}
		       ,stock = #{insertStock}
		 </if>
		  where product_no = #{product_no}
	</update>
	
	<!-- 제품상세 조회 -->
	<select id="productDetaile" resultType="kr.happyjob.study.business.model.ProductModel">
		/*kr.happyjob.study.business.dao.ProductDao.productDetaile*/
		select product_no
		      ,lcategory_cd
		      ,mcategory_cd
		      ,product_name
		      ,price
		      ,stock
		  from tb_product
		 where product_no = #{product_no} and lcategory_cd = #{lcategory_cd} and mcategory_cd = #{mcategory_cd}
	</select>

	<!-- 제품대분류 등록 -->
	<!-- <insert id="insertDetail_code">
	/*kr.happyjob.study.business.dao.ProductDao.insertDetail_code*/
	<selectKey keyProperty="detail_code" resultType="int" order="BEFORE"> 
	   	SELECT IFNULL(MAX(detail_code),0) +1
	      FROM tb_detail_code
		 where group_code = 'lcategory_cd'	
	  </selectKey>
		insert
		  into tb_detail_code
		       (
		         detail_code
		        ,group_code
		        ,detail_name
		        ,note
		        ,use_yn
		        ,regId
		        ,reg_date
		        ,updateId
		        ,update_date
		        ,sequence
		        ,d_temp_field1
		        ,d_temp_field2
		        ,d_temp_field3
		        ,d_temp_field4
		        )
		values (
				 #{detail_code}
				,'lcategory_cd'
				,#{detail_name}
				,null
				,'Y'
				,null
		        ,null
		        ,null
		        ,null
		        ,null
		        ,null
		        ,null
		        ,null
		        ,null
		        )
	</insert> -->

	<!-- 제품중분류 등록 -->
	<insert id="insertPreductType">
	/*kr.happyjob.study.business.dao.ProductDao.insertPreductType*/
	<selectKey keyProperty="mcategory_cd" resultType="int" order="BEFORE"> 
	   	SELECT IFNULL(MAX(mcategory_cd),0) +1
	      FROM tb_product_type
		 where lcategory_cd = #{lcategory_cd}
	  </selectKey>
		insert
		  into tb_product_type
		       (
		         lcategory_cd
		        ,mcategory_cd
		        ,product_name
		        )
		values (
				 #{lcategory_cd}
				,#{mcategory_cd} 
				,#{mProduct_name}
		        )
	</insert>

	<!-- 제품소분류 등록 -->
	<insert id="insertPreduct">
	/*kr.happyjob.study.business.dao.ProductDao.insertPreduct*/
	<selectKey keyProperty="product_no" resultType="int" order="BEFORE"> 
	   	SELECT IFNULL(MAX(product_no),0) +1
	      FROM tb_product
	  </selectKey>
		insert
		  into tb_product
		       (
		         product_no
		        ,lcategory_cd
		        ,mcategory_cd
		        ,product_name
		        ,price
		        ,stock
		        )
		values (
				 #{product_no}
				,#{lcategory_cd}
				,#{mProduct_cd} 
				,#{product_name}
				,null
				,null
		        )
	</insert>
	
	<!-- 제품저장 -->
	<update id="productSave">
	</update>
</mapper>